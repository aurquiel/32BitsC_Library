<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="header_8h" kind="file">
    <compoundname>header.h</compoundname>
    <includedby refid="allocator_8h" local="yes">C:/Users/egomez/Documents/codeblocks/testc22/allocator.h</includedby>
    <includedby refid="print_8h" local="yes">C:/Users/egomez/Documents/codeblocks/testc22/print.h</includedby>
    <invincdepgraph>
      <node id="29">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/allocator.c</label>
        <link refid="allocator_8c"/>
      </node>
      <node id="28">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/header.h</label>
        <link refid="header.h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/print.c</label>
        <link refid="print_8c"/>
      </node>
      <node id="31">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/interchange.c</label>
        <link refid="interchange_8c"/>
      </node>
      <node id="33">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/print.h</label>
        <link refid="print_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/interchange.h</label>
        <link refid="interchange_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>C:/Users/egomez/Documents/codeblocks/testc22/main.c</label>
        <link refid="main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="header_8h_1a745f95e233e749c271e3a4c2a3d08271" prot="public" static="no">
        <name>NumberOfArrayElements</name>
        <param><defname>x</defname></param>
        <initializer>(sizeof (x) / sizeof (*x))</initializer>
        <briefdescription>
<para>definition to obtain the number of elements belonging to an array, do not work with declarations like; char* = &quot;str&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/egomez/Documents/codeblocks/testc22/header.h" line="10" column="9" bodyfile="C:/Users/egomez/Documents/codeblocks/testc22/header.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="header_8h_1af6a258d8f3ee5206d682d799316314b1" prot="public" static="no">
        <name>bool</name>
        <enumvalue id="header_8h_1af6a258d8f3ee5206d682d799316314b1ae9de385ef6fe9bf3360d1038396b884c" prot="public">
          <name>false</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>0 indicating false </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" prot="public">
          <name>true</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>1 indicating true </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>enum to add bool type to the C programing language. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/egomez/Documents/codeblocks/testc22/header.h" line="20" column="1" bodyfile="C:/Users/egomez/Documents/codeblocks/testc22/header.h" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8" prot="public" static="no">
        <name>typesPointers</name>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a6f4197d6b79e7da9b2fbb5749c58d531" prot="public">
          <name>charPointer</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>0 indicating char* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a03def4b5bd4d979bd9b7969e90616535" prot="public">
          <name>unsignedCharPointer</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>1 indicating unsigned char* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a98e410725d550632e5d197a5417c42c3" prot="public">
          <name>int8Pointer</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>2 indicating int8_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8aab56cb5de46060fd08ce040e293f7faa" prot="public">
          <name>unsignedInt8Pointer</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>3 indicating uint8_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a4dbf24f3ef8ac2423a7278e0d364f32d" prot="public">
          <name>int16Pointer</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>4 indicating int16_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8ab2c46e6c27472c1b18b51b98f977e0ac" prot="public">
          <name>unsignedInt16Pointer</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>5 indicating uint16_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8078dcb6e7d898c4c3c953e3ef6424a2" prot="public">
          <name>int32Pointer</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>6 indicating int32_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a72992298d35ad881a65a1f99a159bf66" prot="public">
          <name>unsignedInt32Pointer</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>7 indicating uint32_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8ad0d261549b4e2af3b7f9b0393fa557" prot="public">
          <name>int64Pointer</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>8 indicating int64_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8af3f401d9b1ce030f968be8d120d98cbd" prot="public">
          <name>unsignedInt64Pointer</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>9 indicating uint64_t* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a31dac678be9cf29ac1564744a0cc5fa5" prot="public">
          <name>floatPointer</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>10 indicating float* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a935ccfa9c5398e80b5d6571569deaa84" prot="public">
          <name>doublePointer</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11 indicating double* </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a3adb82b6afa6900476fd71322fa9d7bb" prot="public">
          <name>structPointer</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>12 indicating struct* </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>enum to enumerate the type of pointers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/egomez/Documents/codeblocks/testc22/header.h" line="33" column="1" bodyfile="C:/Users/egomez/Documents/codeblocks/testc22/header.h" bodystart="33" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HEADER_H_INCLUDED</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HEADER_H_INCLUDED</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="header_8h_1a745f95e233e749c271e3a4c2a3d08271" refkind="member"><highlight class="preprocessor">#define<sp/>NumberOfArrayElements(x)<sp/>(sizeof<sp/>(x)<sp/>/<sp/>sizeof<sp/>(*x))</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="20" refid="header_8h_1af6a258d8f3ee5206d682d799316314b1" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21" refid="header_8h_1af6a258d8f3ee5206d682d799316314b1ae9de385ef6fe9bf3360d1038396b884c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="header_8h_1af6a258d8f3ee5206d682d799316314b1a08f175a5505a10b9ed657defeb050e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="header_8h_1af6a258d8f3ee5206d682d799316314b1" kindref="member">bool</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="34" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a6f4197d6b79e7da9b2fbb5749c58d531" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a6f4197d6b79e7da9b2fbb5749c58d531" kindref="member">charPointer</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a03def4b5bd4d979bd9b7969e90616535" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a03def4b5bd4d979bd9b7969e90616535" kindref="member">unsignedCharPointer</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a98e410725d550632e5d197a5417c42c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a98e410725d550632e5d197a5417c42c3" kindref="member">int8Pointer</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8aab56cb5de46060fd08ce040e293f7faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8aab56cb5de46060fd08ce040e293f7faa" kindref="member">unsignedInt8Pointer</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a4dbf24f3ef8ac2423a7278e0d364f32d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a4dbf24f3ef8ac2423a7278e0d364f32d" kindref="member">int16Pointer</ref><sp/>=<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8ab2c46e6c27472c1b18b51b98f977e0ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8ab2c46e6c27472c1b18b51b98f977e0ac" kindref="member">unsignedInt16Pointer</ref><sp/>=<sp/>5,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8078dcb6e7d898c4c3c953e3ef6424a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8078dcb6e7d898c4c3c953e3ef6424a2" kindref="member">int32Pointer</ref><sp/>=<sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a72992298d35ad881a65a1f99a159bf66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a72992298d35ad881a65a1f99a159bf66" kindref="member">unsignedInt32Pointer</ref><sp/>=<sp/>7,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8ad0d261549b4e2af3b7f9b0393fa557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a8ad0d261549b4e2af3b7f9b0393fa557" kindref="member">int64Pointer</ref><sp/>=<sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8af3f401d9b1ce030f968be8d120d98cbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8af3f401d9b1ce030f968be8d120d98cbd" kindref="member">unsignedInt64Pointer</ref><sp/>=<sp/>9,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a31dac678be9cf29ac1564744a0cc5fa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a31dac678be9cf29ac1564744a0cc5fa5" kindref="member">floatPointer</ref><sp/>=<sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a935ccfa9c5398e80b5d6571569deaa84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a935ccfa9c5398e80b5d6571569deaa84" kindref="member">doublePointer</ref><sp/>=<sp/>11,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a3adb82b6afa6900476fd71322fa9d7bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8a3adb82b6afa6900476fd71322fa9d7bb" kindref="member">structPointer</ref><sp/>=<sp/>12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/><ref refid="header_8h_1a745d66fd03b426740db1f35b4b31b2f8" kindref="member">typesPointers</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>HEADER_H_INCLUDED</highlight></codeline>
    </programlisting>
    <location file="C:/Users/egomez/Documents/codeblocks/testc22/header.h"/>
  </compounddef>
</doxygen>
