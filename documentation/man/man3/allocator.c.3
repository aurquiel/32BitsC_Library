.TH "C:/Users/egomez/Documents/codeblocks/testc22/allocator.c" 3 "Wed Aug 8 2018" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/egomez/Documents/codeblocks/testc22/allocator.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'allocator\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBAllocatorMalloc\fP (int64_t numberOfElements, int8_t typePointer)"
.br
.RI "\fIThis function is a wrapper of the malloc function, enhancing the notification error in case of NULL as result of the allocation process\&. \fP"
.ti -1c
.RI "void ** \fBAllocatorMallocTwoDimension\fP (int64_t numberOfElements, int8_t typePointer)"
.br
.RI "\fIThis function is a wrapper of the malloc function to allocate an array of pointers, enhancing the notification error in case of NULL as result of the allocation process\&. \fP"
.ti -1c
.RI "void * \fBAllocatorCalloc\fP (int64_t numberOfElements, int8_t typePointer)"
.br
.RI "\fIThis function is a wrapper of the calloc function, enhancing the notification error in case of NULL as result of the allocation process\&. \fP"
.ti -1c
.RI "void ** \fBAllocatorCallocTwoDimension\fP (int64_t numberOfElements, int8_t typePointer)"
.br
.RI "\fIThis function is a wrapper of the calloc function to allocate an array of pointers, enhancing the notification error in case of NULL as result of the allocation process\&. \fP"
.ti -1c
.RI "void * \fBAllocatorRealloc\fP (void *arrayAllocated, uint64_t numberOfElements, int8_t typePointer)"
.br
.RI "\fIThis function is a wrapper of the realloc function, enhancing the notification error in case of NULL as result of the allocation process\&. \fP"
.ti -1c
.RI "void \fBAllocatorFree\fP (void *arrayAllocated)"
.br
.RI "\fIThis function is a wrapper of the free function, enhancing the freeing process ensuring that the memory was released\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "void* AllocatorCalloc (int64_tnumberOfElements, int8_ttypePointer)"

.PP
This function is a wrapper of the calloc function, enhancing the notification error in case of NULL as result of the allocation process\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumberOfElements\fP number of elements to allocate 
.br
\fItypePointer\fP type of the elements to be allocated 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the allocated memory 
.RE
.PP

.PP
Definition at line 91 of file allocator\&.c\&.
.SS "void** AllocatorCallocTwoDimension (int64_tnumberOfElements, int8_ttypePointer)"

.PP
This function is a wrapper of the calloc function to allocate an array of pointers, enhancing the notification error in case of NULL as result of the allocation process\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumberOfElements\fP number of elements to allocate 
.br
\fItypePointer\fP type of the elements to be allocated 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the allocated memory 
.RE
.PP

.PP
Definition at line 135 of file allocator\&.c\&.
.SS "void AllocatorFree (void *arrayAllocated)"

.PP
This function is a wrapper of the free function, enhancing the freeing process ensuring that the memory was released\&. 
.PP
\fBParameters:\fP
.RS 4
\fIarrayAllocated\fP pointer to the array to be reallocated 
.RE
.PP

.PP
Definition at line 223 of file allocator\&.c\&.
.SS "void* AllocatorMalloc (int64_tnumberOfElements, int8_ttypePointer)"

.PP
This function is a wrapper of the malloc function, enhancing the notification error in case of NULL as result of the allocation process\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumberOfElements\fP number of elements to allocate 
.br
\fItypePointer\fP type of the elements to be allocated 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the allocated memory 
.RE
.PP

.PP
Definition at line 3 of file allocator\&.c\&.
.SS "void** AllocatorMallocTwoDimension (int64_tnumberOfElements, int8_ttypePointer)"

.PP
This function is a wrapper of the malloc function to allocate an array of pointers, enhancing the notification error in case of NULL as result of the allocation process\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumberOfElements\fP number of elements to allocate 
.br
\fItypePointer\fP type of the elements to be allocated 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the allocated memory 
.RE
.PP

.PP
Definition at line 47 of file allocator\&.c\&.
.SS "void* AllocatorRealloc (void *arrayAllocated, uint64_tnumberOfElements, int8_ttypePointer)"

.PP
This function is a wrapper of the realloc function, enhancing the notification error in case of NULL as result of the allocation process\&. 
.PP
\fBParameters:\fP
.RS 4
\fIarrayAllocated\fP pointer to the array to be reallocated 
.br
\fInumberOfElements\fP number of elements to allocate 
.br
\fItypePointer\fP type of the elements to be allocated 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the allocated memory 
.RE
.PP

.PP
Definition at line 179 of file allocator\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
